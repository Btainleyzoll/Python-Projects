'''
This is my Vulnerability scanner 


'''
import socket
import concurrent.futures
import threading
from tqdm import tqdm

lock = threading.Lock()

def big_scan(ip, portnum, open_ports):
    sock = socket.socket(socket.AF_INET, socket.SOCK_STREAM)
    sock.settimeout(.5)
    try:
        sock.connect((ip, portnum))
        with lock:
            open_ports.append(portnum)
    except (socket.timeout, ConnectionRefusedError):
        pass
    finally:
        sock.close()
    
         

def connect_port(ip, ports ):
    common = [21, 22, 23, 25, 53, 80, 110, 143, 443, 3389, 8080]
    open_ports = []
    if ports == "all":
        port_range = range(0, 65535)
        print("Trying to connect to all ports")
        max_threads = 150
              
    elif ports == "common":
        print("Trying to connect to common ports ")
        max_threads = 50
        
    else:
        max_threads = 100
        port_range = ports
        
    with concurrent.futures.ThreadPoolExecutor(max_workers = max_threads) as executor:
        futures = [executor.submit(big_scan, ip, portnum, open_ports) for portnum in port_range]
        for _ in tqdm(concurrent.futures.as_completed(futures), total = len(futures)):
            pass    
                
    if not open_ports:
        print("No open ports were found given the specifications.")
        
    return ip, open_ports           
                
        
            